[{"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\index.js":"1","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\App.js":"2","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignUp.js":"3","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\firebase.js":"4","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\contexts\\AuthContext.js":"5","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\Dashboard.js":"6","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\PrivateRoute.js":"7","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\listItems.js":"8","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\Navigate.js":"9","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignIn.js":"10","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\BodyWrapper.js":"11","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsPage.js":"12","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTab.js":"13","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\TabPanel.js":"14","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsFab.js":"15","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTable.js":"16","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\MaterialsTable.js":"17"},{"size":146,"mtime":1607986207869,"results":"18","hashOfConfig":"19"},{"size":932,"mtime":1607961811109,"results":"20","hashOfConfig":"19"},{"size":4458,"mtime":1608060701816,"results":"21","hashOfConfig":"19"},{"size":529,"mtime":1607174470729,"results":"22","hashOfConfig":"19"},{"size":1337,"mtime":1607317693519,"results":"23","hashOfConfig":"19"},{"size":1106,"mtime":1607966751483,"results":"24","hashOfConfig":"19"},{"size":455,"mtime":1607710078283,"results":"25","hashOfConfig":"19"},{"size":2389,"mtime":1607965790635,"results":"26","hashOfConfig":"19"},{"size":4422,"mtime":1607967373357,"results":"27","hashOfConfig":"19"},{"size":4084,"mtime":1607733404255,"results":"28","hashOfConfig":"19"},{"size":736,"mtime":1607943469872,"results":"29","hashOfConfig":"19"},{"size":474,"mtime":1607985661553,"results":"30","hashOfConfig":"19"},{"size":1231,"mtime":1608060121723,"results":"31","hashOfConfig":"19"},{"size":753,"mtime":1607974674567,"results":"32","hashOfConfig":"19"},{"size":2528,"mtime":1607985771860,"results":"33","hashOfConfig":"19"},{"size":1165,"mtime":1608060978060,"results":"34","hashOfConfig":"19"},{"size":1475,"mtime":1608060469387,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"xo8ert",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\index.js",[],["74","75"],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\App.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignUp.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\firebase.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\Dashboard.js",["76"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport BodyWrapper from '../components/Navigator/BodyWrapper';\r\nimport Navigate from '../components/Navigator/Navigate';\r\nimport { useAuth} from '../contexts/AuthContext';\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState('');\r\n    const { signout } = useAuth();\r\n    \r\n    const history = useHistory();\r\n\r\n    async function handleLogOut(){\r\n        try {\r\n            setError('');\r\n            await signout(); \r\n            history.push('/');\r\n        } catch (e) {\r\n            setError('Unable to logout!');\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Navigate title = {'Dashbord'} logout = {()=> handleLogOut()} /> \r\n        \r\n            <BodyWrapper>\r\n                <div>\r\n                    {/* { error && <Alert variant = 'danger'> { error } </Alert> } */}\r\n                    {/* <Button onClick = {handleLogOut} >Log Out</Button> */}\r\n                    Dashbord \r\n                </div>\r\n            </BodyWrapper>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\PrivateRoute.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\listItems.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\Navigate.js",["77"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, CssBaseline , Drawer, AppBar,Toolbar, List,Typography,Divider,IconButton,Badge} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport  { mainListItems, secondaryListItems } from './listItems';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Navigate(props) {\r\n\r\n   const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\" onClick={props.logout}>\r\n              <ExitToAppIcon />\r\n            Log out\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignIn.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\BodyWrapper.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsPage.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTab.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\TabPanel.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsFab.js",["78"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\n\r\nconst actions = ['New Item', 'New Material'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Add Items/Materials</DialogTitle>\r\n      <List>\r\n        {actions.map((action) => (\r\n          <ListItem button onClick={() => handleListItemClick(action)} key={action}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n              <AddIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={action}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ItemsFab() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(actions[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br/> */}\r\n      <Fab variant=\"round\" color=\"primary\" onClick={handleClickOpen}>\r\n        <AddIcon/>\r\n      </Fab>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTable.js",["79"],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\MaterialsTable.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":9,"column":12,"nodeType":"87","messageId":"88","endLine":9,"endColumn":17},{"ruleId":"85","severity":1,"message":"89","line":97,"column":10,"nodeType":"87","messageId":"88","endLine":97,"endColumn":17},{"ruleId":"85","severity":1,"message":"90","line":12,"column":8,"nodeType":"87","messageId":"88","endLine":12,"endColumn":18},{"ruleId":"85","severity":1,"message":"91","line":14,"column":18,"nodeType":"87","messageId":"88","endLine":14,"endColumn":25},{"ruleId":"85","severity":1,"message":"91","line":14,"column":18,"nodeType":"87","messageId":"88","endLine":14,"endColumn":25},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'Typography' is defined but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]