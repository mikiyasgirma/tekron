[{"C:\\terkon\\tekron\\src\\index.js":"1","C:\\terkon\\tekron\\src\\App.js":"2","C:\\terkon\\tekron\\src\\pages\\Dashboard.js":"3","C:\\terkon\\tekron\\src\\pages\\SignIn.js":"4","C:\\terkon\\tekron\\src\\pages\\PrivateRoute.js":"5","C:\\terkon\\tekron\\src\\pages\\SignUp.js":"6","C:\\terkon\\tekron\\src\\contexts\\AuthContext.js":"7","C:\\terkon\\tekron\\src\\pages\\items\\ItemsPage.js":"8","C:\\terkon\\tekron\\src\\firebase.js":"9","C:\\terkon\\tekron\\src\\pages\\items\\ItemsTab.js":"10","C:\\terkon\\tekron\\src\\pages\\items\\ItemsFab.js":"11","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\ItemForm.js":"12","C:\\terkon\\tekron\\src\\pages\\items\\materials\\PackagingMaterialForm.js":"13","C:\\terkon\\tekron\\src\\pages\\items\\materials\\RawMaterialForm.js":"14","C:\\terkon\\tekron\\src\\components\\Navigator\\Navigate.js":"15","C:\\terkon\\tekron\\src\\components\\Navigator\\BodyWrapper.js":"16","C:\\terkon\\tekron\\src\\components\\TabPanel.js":"17","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\ItemsTable.js":"18","C:\\terkon\\tekron\\src\\pages\\items\\materials\\RawMaterialsTable.js":"19","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\CreateItemStepper.js":"20","C:\\terkon\\tekron\\src\\components\\Navigator\\listItems.js":"21","C:\\terkon\\tekron\\src\\services\\MaterialServices.js":"22","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\RecipeFrom.js":"23","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\TestingForm.js":"24","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\ProductItemForm.js":"25","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\ChipsArray.js":"26","C:\\terkon\\tekron\\src\\pages\\settings\\SettingsPage.js":"27","C:\\terkon\\tekron\\src\\pages\\settings\\Units.js":"28","C:\\terkon\\tekron\\src\\pages\\settings\\SettingsList.js":"29","C:\\terkon\\tekron\\src\\pages\\settings\\Packaging.js":"30","C:\\terkon\\tekron\\src\\pages\\settings\\Bottling.js":"31","C:\\terkon\\tekron\\src\\pages\\settings\\Commission.js":"32","C:\\terkon\\tekron\\src\\pages\\settings\\BankAccount.js":"33","C:\\terkon\\tekron\\src\\pages\\settings\\vatRate.js":"34","C:\\terkon\\tekron\\src\\pages\\settings\\SalesZone.js":"35","C:\\terkon\\tekron\\src\\services\\unitServices.js":"36","C:\\terkon\\tekron\\src\\pages\\production\\ProductionPage.js":"37","C:\\terkon\\tekron\\src\\pages\\production\\ProductionList.js":"38","C:\\terkon\\tekron\\src\\pages\\production\\PlanTable.js":"39","C:\\terkon\\tekron\\src\\services\\PlanServices.js":"40","C:\\terkon\\tekron\\src\\pages\\production\\planFab.js":"41","C:\\terkon\\tekron\\src\\pages\\production\\addPlan.js":"42","C:\\terkon\\tekron\\src\\pages\\details\\DetailsPage.js":"43","C:\\terkon\\tekron\\src\\pages\\details\\DetailsList.js":"44","C:\\terkon\\tekron\\src\\pages\\details\\ItemDesc.js":"45","C:\\terkon\\tekron\\src\\pages\\details\\RowMaterials.js":"46","C:\\terkon\\tekron\\src\\pages\\details\\Tests.js":"47"},{"size":146,"mtime":1607986207869,"results":"48","hashOfConfig":"49"},{"size":1336,"mtime":1609112311114,"results":"50","hashOfConfig":"49"},{"size":1106,"mtime":1607966751483,"results":"51","hashOfConfig":"49"},{"size":4128,"mtime":1608404940922,"results":"52","hashOfConfig":"49"},{"size":455,"mtime":1607710078283,"results":"53","hashOfConfig":"49"},{"size":4501,"mtime":1608404954006,"results":"54","hashOfConfig":"49"},{"size":1337,"mtime":1607317693519,"results":"55","hashOfConfig":"49"},{"size":1348,"mtime":1608969035631,"results":"56","hashOfConfig":"49"},{"size":930,"mtime":1608622243439,"results":"57","hashOfConfig":"49"},{"size":2317,"mtime":1608677089381,"results":"58","hashOfConfig":"49"},{"size":2974,"mtime":1608501326910,"results":"59","hashOfConfig":"49"},{"size":210,"mtime":1608514365868,"results":"60","hashOfConfig":"49"},{"size":2962,"mtime":1608512845394,"results":"61","hashOfConfig":"49"},{"size":8389,"mtime":1609027840374,"results":"62","hashOfConfig":"49"},{"size":4499,"mtime":1608077262367,"results":"63","hashOfConfig":"49"},{"size":736,"mtime":1607943469872,"results":"64","hashOfConfig":"49"},{"size":766,"mtime":1608070719803,"results":"65","hashOfConfig":"49"},{"size":1199,"mtime":1608939768867,"results":"66","hashOfConfig":"49"},{"size":3087,"mtime":1608512946576,"results":"67","hashOfConfig":"49"},{"size":2314,"mtime":1608516324573,"results":"68","hashOfConfig":"49"},{"size":2641,"mtime":1609112063685,"results":"69","hashOfConfig":"49"},{"size":646,"mtime":1608488988511,"results":"70","hashOfConfig":"49"},{"size":157,"mtime":1608580981614,"results":"71","hashOfConfig":"49"},{"size":159,"mtime":1608515892491,"results":"72","hashOfConfig":"49"},{"size":4841,"mtime":1608580572794,"results":"73","hashOfConfig":"49"},{"size":1847,"mtime":1608553273583,"results":"74","hashOfConfig":"49"},{"size":692,"mtime":1608935511713,"results":"75","hashOfConfig":"49"},{"size":2470,"mtime":1609228729986,"results":"76","hashOfConfig":"49"},{"size":3310,"mtime":1609224979142,"results":"77","hashOfConfig":"49"},{"size":182,"mtime":1608677602415,"results":"78","hashOfConfig":"49"},{"size":562,"mtime":1609224938423,"results":"79","hashOfConfig":"49"},{"size":118,"mtime":1608684448632,"results":"80","hashOfConfig":"49"},{"size":120,"mtime":1608684446214,"results":"81","hashOfConfig":"49"},{"size":112,"mtime":1608684854851,"results":"82","hashOfConfig":"49"},{"size":116,"mtime":1608684875347,"results":"83","hashOfConfig":"49"},{"size":479,"mtime":1608787647581,"results":"84","hashOfConfig":"49"},{"size":950,"mtime":1608971927066,"results":"85","hashOfConfig":"49"},{"size":2466,"mtime":1609226924660,"results":"86","hashOfConfig":"49"},{"size":2580,"mtime":1609226840907,"results":"87","hashOfConfig":"49"},{"size":476,"mtime":1608947769395,"results":"88","hashOfConfig":"49"},{"size":2972,"mtime":1608971335724,"results":"89","hashOfConfig":"49"},{"size":8783,"mtime":1609032274383,"results":"90","hashOfConfig":"49"},{"size":692,"mtime":1609113047528,"results":"91","hashOfConfig":"49"},{"size":2510,"mtime":1609204258939,"results":"92","hashOfConfig":"49"},{"size":4611,"mtime":1609190050698,"results":"93","hashOfConfig":"49"},{"size":726,"mtime":1609195334416,"results":"94","hashOfConfig":"49"},{"size":552,"mtime":1609195295240,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"15gt5am",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\terkon\\tekron\\src\\index.js",[],["203","204"],"C:\\terkon\\tekron\\src\\App.js",[],"C:\\terkon\\tekron\\src\\pages\\Dashboard.js",["205"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport BodyWrapper from '../components/Navigator/BodyWrapper';\r\nimport Navigate from '../components/Navigator/Navigate';\r\nimport { useAuth} from '../contexts/AuthContext';\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState('');\r\n    const { signout } = useAuth();\r\n    \r\n    const history = useHistory();\r\n\r\n    async function handleLogOut(){\r\n        try {\r\n            setError('');\r\n            await signout(); \r\n            history.push('/');\r\n        } catch (e) {\r\n            setError('Unable to logout!');\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Navigate title = {'Dashbord'} logout = {()=> handleLogOut()} /> \r\n        \r\n            <BodyWrapper>\r\n                <div>\r\n                    {/* { error && <Alert variant = 'danger'> { error } </Alert> } */}\r\n                    {/* <Button onClick = {handleLogOut} >Log Out</Button> */}\r\n                    Dashbord \r\n                </div>\r\n            </BodyWrapper>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\n","C:\\terkon\\tekron\\src\\pages\\SignIn.js",[],"C:\\terkon\\tekron\\src\\pages\\PrivateRoute.js",[],"C:\\terkon\\tekron\\src\\pages\\SignUp.js",[],"C:\\terkon\\tekron\\src\\contexts\\AuthContext.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\ItemsPage.js",[],"C:\\terkon\\tekron\\src\\firebase.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\ItemsTab.js",["206"],"import React,{ useState, useEffect} from 'react';\r\nimport { Grid, makeStyles} from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from '../../components/TabPanel';\r\nimport ItemsTable from './productItems/ItemsTable';\r\nimport RawMaterialsTable from './materials/RawMaterialsTable';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `items-tab-${index}`,\r\n    'aria-controls': `items-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ItemsTabs({children}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  // const [itemsData, setItemsData] = useState();\r\n  // const [materialsData, setMaterialsData] = useState();\r\n\r\n  /// TODO: initially fetch all itemsData b/c that's what got rendered first and pass it to Tab 0 as a props \r\n \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const initialItemsData = [\r\n    {itemId: 'DW-10025', itemName: 'Dish Washer', category: 'Cleaning', variantType:'Color'},\r\n    {itemId: 'SM-10013', itemName: 'Shampoo', category: 'Cosmetics', variantType:'Flavour'},\r\n    {itemId: 'LHW-10025', itemName: 'Liquid Hand Soap', category: 'Cleaning', variantType:'Flavour'},\r\n    {itemId: 'WC-10025', itemName: 'Windo Cleaner', category: 'Cleaning', variantType:'None'},\r\n    {itemId: 'HS-10025', itemName: 'Hand soap', category: 'Cleaning', variantType:'Flavour'},\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"items tabs\">\r\n          <Tab label=\"Product Items\" {...a11yProps(0)}  />\r\n          <Tab label=\"Materials\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <Grid \r\n          container\r\n          direction='row'\r\n          justify='center'\r\n          alignContent='center' \r\n        >\r\n          {children}\r\n        </Grid>\r\n        \r\n      <TabPanel value={value} index={0}>\r\n        <ItemsTable initialData= {initialItemsData} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RawMaterialsTable/>\r\n        {/* TODO: render PackagingMaterialsTable */}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\terkon\\tekron\\src\\pages\\items\\ItemsFab.js",["207"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\n\r\nconst actions = ['New Item', 'New Raw Material', 'New Packagining Material'];\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n  \r\n  const { path, url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const handleListItemClick = (value) => {\r\n    /// TODO: navigate to ItemsForm page or MaterialsForm Page depending on the value passed.\r\n    if(value === actions[0]){\r\n      console.log(url)\r\n      history.push(`${url}/additem`);\r\n    } \r\n    if(value === actions[1]) {\r\n       console.log(url)\r\n       history.push(`${url}/addrawmaterial`);\r\n    }\r\n    if(value === actions[2]) {\r\n       console.log(url)\r\n       history.push(`${url}/addpackagingmaterial`);\r\n    }\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Add Items/Materials</DialogTitle>\r\n      <List>\r\n        {actions.map((action) => (\r\n          <ListItem button onClick={() => handleListItemClick(action)} key={action}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n              <AddIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={action}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ItemsFab() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(actions[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab variant=\"round\" color=\"secondary\" onClick={handleClickOpen}>\r\n        <AddIcon/>\r\n      </Fab>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\ItemForm.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\materials\\PackagingMaterialForm.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\materials\\RawMaterialForm.js",[],"C:\\terkon\\tekron\\src\\components\\Navigator\\Navigate.js",["208"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, CssBaseline , Drawer, AppBar,Toolbar, List,Typography,Divider,IconButton,Badge} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport  { mainListItems, secondaryListItems } from './listItems';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Navigate(props) {\r\n\r\n  // const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //TODO:handle logout functionality here take it from Dashboard component \r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\" onClick={props.logout}>\r\n              <ExitToAppIcon />\r\n            Log out\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n\r\n    </>\r\n  );\r\n}","C:\\terkon\\tekron\\src\\components\\Navigator\\BodyWrapper.js",[],"C:\\terkon\\tekron\\src\\components\\TabPanel.js",["209"],"import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default  function TabPanel(props) {\r\n    const { children, value, index, message, ...other  } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}>\r\n\r\n        {value === index && (\r\n          <Box p={4}>\r\n            <div>{message}</div>\r\n            {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  // TabPanel.propTypes = {\r\n  //   children: PropTypes.node,\r\n  //   index: PropTypes.any.isRequired,\r\n  //   value: PropTypes.any.isRequired,\r\n  // };","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\ItemsTable.js",["210"],"import React, {useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function ItemsTable({initialData}) {\r\n    \r\n    // const initialData = [\r\n    //     {itemId: 'DW-10025', itemName: 'Dish Washer', category: 'Cleaning', variantType:'Color'},\r\n    //     {itemId: 'SM-10013', itemName: 'Shampoo', category: 'Cosmetics', variantType:'Flavour'},\r\n    //     {itemId: 'LHW-10025', itemName: 'Liquid Hand Soap', category: 'Cleaning', variantType:'Flavour'},\r\n    //     {itemId: 'WC-10025', itemName: 'Windo Cleaner', category: 'Cleaning', variantType:'None'},\r\n    //     {itemId: 'HS-10025', itemName: 'Hand soap', category: 'Cleaning', variantType:'Flavour'},\r\n    // ];\r\n\r\n    const [data, setData] = useState(initialData);\r\n   \r\n    const columns = [\r\n        {title: 'Item Id', field: 'itemId'},\r\n        {title: 'Item Name', field: 'itemName'},\r\n        {title: 'Category', field: 'category'},\r\n        {title: 'Variant Type', field: 'variantType'}\r\n    ]\r\n\r\n\r\n    return (\r\n      <MaterialTable\r\n        title=\"Items Table\"\r\n        columns={columns}\r\n        data={data}        \r\n        options={{\r\n          search: true\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  ","C:\\terkon\\tekron\\src\\pages\\items\\materials\\RawMaterialsTable.js",["211"],"import React, {useState, useEffect} from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport * as MaterialService from '../../../services/MaterialServices';\r\n\r\nexport default function RawMaterialsTable() {\r\n    \r\n  const [data, setData] = useState([]);\r\n  \r\n  const [columns, setColumns] = useState([\r\n    {title: 'Material Id', field: 'materialId'},\r\n    {title: 'Material Name', field: 'materialName'},\r\n    {title: 'Category', field: 'category', lookup: {\r\n      'chemical' : 'Chemical',\r\n      'dye': 'Dye',\r\n      'fragnance': 'Fragnance',\r\n      'localRawMaterial': 'Local RM'\r\n    }},\r\n    {title: 'Unit', field: 'unit', lookup:{\r\n      'kg': 'Killogram', \r\n      'ml': 'Milliliter', \r\n      'l': 'Liter'}},\r\n    {title: 'Quantity', field: 'quantity', type: 'numeric'},\r\n    {title: 'Reorder Point', field: 'reorderPoint', type:'numeric'},\r\n    {title: 'Exp. Date', field: 'expDate', type: 'datetime'}\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData(){\r\n      const querySnapshot = await MaterialService.getRawMaterials();\r\n      let tempData = [];\r\n      querySnapshot.forEach(doc=>{\r\n        tempData.push({\r\n          materialId: doc.data().materialId, \r\n          materialName: doc.data().materialName, \r\n          category: doc.data().category,\r\n          unit: doc.data().quantity.unit, \r\n          quantity: doc.data().quantity.value, \r\n          reorderPoint: doc.data().reorderPoint,\r\n          expDate: new Date(doc.data().expDate.toDate()),\r\n          });\r\n      })\r\n      setData(tempData);\r\n    }\r\n    fetchData();\r\n    return () => {\r\n     // cleanup\r\n    }\r\n  }, [/*initialData*/])\r\n\r\n    async function onRowUpdate(newData, oldData){\r\n      console.log('New Data: ',newData);\r\n\r\n      const dataUpdate = [...data];\r\n      const index = oldData.tableData.id;\r\n    \r\n      try {\r\n        const modifiedData = {...newData, quantity: {unit: newData.unit, value:Number(newData.quantity)} } \r\n       \r\n        const {materialId, materialName, category, quantity, expDate, reorderPoint } = modifiedData;\r\n        \r\n        await MaterialService.updateRawMaterial(oldData.materialId,  {materialId, materialName, category, quantity, expDate, reorderPoint });\r\n       \r\n        dataUpdate[index] = newData;\r\n        setData([...dataUpdate]); \r\n\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    \r\n    async function onRowDelete(oldData){\r\n      try {\r\n        const dataDelete = [...data];\r\n        const index = oldData.tableData.id;\r\n        \r\n        await MaterialService.deleteRawMaterial(oldData.materialId);\r\n        ///TODO: display some succuss message in sanck bar or smth    \r\n        dataDelete.splice(index, 1);\r\n        setData([...dataDelete]);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <MaterialTable\r\n        title=\"Raw Materials\"\r\n        columns={columns}\r\n        data={data}\r\n        editable={{\r\n          onRowUpdate: onRowUpdate, \r\n          onRowDelete: onRowDelete,\r\n        }}        \r\n        options={{\r\n          search: true\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  ","C:\\terkon\\tekron\\src\\pages\\items\\productItems\\CreateItemStepper.js",["212"],"import React,{useState} from 'react';\r\nimport { makeStyles, Stepper, Step, Button, Typography, StepLabel} from '@material-ui/core';\r\nimport ProductItemForm from './forms/ProductItemForm';\r\nimport RecipeFrom from './forms/RecipeFrom';\r\nimport TestingForm from './forms/TestingForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  stepBody: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Product Item', 'Recipe', 'Testing'];\r\n}\r\n\r\nfunction getStepContent(stepIndex) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return <ProductItemForm/>;\r\n    case 1:\r\n      return <RecipeFrom/>;\r\n    case 2:\r\n      return <TestingForm/>;\r\n    default:\r\n      return 'Unknown stepIndex';\r\n  }\r\n}\r\n\r\nexport default function CreateItemStepper() {\r\n  const classes = useStyles();\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Button onClick={handleReset}>Reset</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n           \r\n            <div className={classes.stepBody}>{getStepContent(activeStep)}</div>\r\n            <div>\r\n              <Button\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}\r\n                className={classes.backButton}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\terkon\\tekron\\src\\components\\Navigator\\listItems.js",[],"C:\\terkon\\tekron\\src\\services\\MaterialServices.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\RecipeFrom.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\TestingForm.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\ProductItemForm.js",[],"C:\\terkon\\tekron\\src\\pages\\items\\productItems\\forms\\ChipsArray.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\SettingsPage.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\Units.js",["213","214"],"C:\\terkon\\tekron\\src\\pages\\settings\\SettingsList.js",["215"],"C:\\terkon\\tekron\\src\\pages\\settings\\Packaging.js",["216"],"import { AssignmentReturnOutlined } from \"@material-ui/icons\";\r\n\r\nexport default function Packaging(){\r\n    return(\r\n        <div>\r\n            hi packaging\r\n        </div>\r\n    )\r\n}",["217","218"],"C:\\terkon\\tekron\\src\\pages\\settings\\Bottling.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\Commission.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\BankAccount.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\vatRate.js",[],"C:\\terkon\\tekron\\src\\pages\\settings\\SalesZone.js",[],"C:\\terkon\\tekron\\src\\services\\unitServices.js",[],"C:\\terkon\\tekron\\src\\pages\\production\\ProductionPage.js",[],"C:\\terkon\\tekron\\src\\pages\\production\\ProductionList.js",["219"],"C:\\terkon\\tekron\\src\\pages\\production\\PlanTable.js",[],"C:\\terkon\\tekron\\src\\services\\PlanServices.js",[],"C:\\terkon\\tekron\\src\\pages\\production\\planFab.js",["220"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\n\r\nconst actions = ['New Schedule ', 'Completed Production', 'Open Production'];\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n  \r\n  const { path, url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const handleListPlanClick = (value) => {\r\n    /// TODO: navigate to ItemsForm page or MaterialsForm Page depending on the value passed.\r\n    if(value === actions[0]){\r\n      console.log(url)\r\n      history.push(`${url}/addPlan`);\r\n    } \r\n    if(value === actions[1]) {\r\n       console.log(url)\r\n       history.push(`${url}/completedProduction`);\r\n    }\r\n    if(value === actions[2]) {\r\n       console.log(url)\r\n       history.push(`${url}/openProduction`);\r\n    }\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Production Schedule</DialogTitle>\r\n      <List>\r\n        {actions.map((action) => (\r\n          <ListItem button onClick={() => handleListPlanClick(action)} key={action}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n              <AddIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={action}/>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function PlanFab() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(actions[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fab variant=\"round\" color=\"secondary\" onClick={handleClickOpen}>\r\n        <AddIcon/>\r\n      </Fab>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\terkon\\tekron\\src\\pages\\production\\addPlan.js",["221","222","223","224","225","226"],"import {\r\n    Container,\r\n    makeStyles,\r\n    FormControl,\r\n    TextField,\r\n    Grid,\r\n    Paper,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Button,\r\n    } from \"@material-ui/core\";\r\n  import React, {useState}from \"react\";\r\n  import {useHistory} from 'react-router-dom';\r\n  import \"date-fns\";\r\n  import DateFnsUtils from \"@date-io/date-fns\";\r\n  import {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n  } from \"@material-ui/pickers\";\r\n  import { SaveOutlined } from \"@material-ui/icons\";\r\n  \r\n  import * as MaterialService from '../../services/MaterialServices';\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    h1: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      // width: \"25ch\",\r\n    },\r\n    formControl: {\r\n      display: \"flex\",\r\n      margin: theme.spacing(1),\r\n       //minWidth: \"200%\",\r\n    },\r\n    \r\n  }));\r\n  \r\n  export default function RawMaterialForm() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    \r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n  \r\n    const [materialId, setMaterialId] = useState('');\r\n    const [materialName, setMaterialName] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [unit, setUnit] = useState('kg');\r\n    const [quantity, setQuantity] = useState(0); \r\n    const [selectedDate, setSelectedDate] = useState();\r\n   \r\n    const [reorderPoint, setReorderPoint] = useState(0);\r\n  \r\n    const handleMaterialIdChange = (e) =>{\r\n      setMaterialId(e.target.value);\r\n    }\r\n  \r\n    const handleMaterialNameChange = (e) =>{\r\n      setMaterialName(e.target.value);\r\n    }\r\n  \r\n    const handleDateChange = (date) => {\r\n      setSelectedDate(date);\r\n    };\r\n  \r\n    const handleCategoryChange = (event) => {\r\n      setCategory(event.target.value);\r\n    };\r\n    \r\n    const handleUnitChange = (event) => {\r\n      setUnit(event.target.value);\r\n    };\r\n  \r\n    const handleQuantityChange = (e) => {\r\n      setQuantity(e.target.value);\r\n    }\r\n  \r\n    const handleReorderPointChange = (e) => {\r\n      setReorderPoint(e.target.value);\r\n    }\r\n  \r\n    ///TODO: write a utility funtion that validates the inputs  \r\n  \r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      const newMaterial = {\r\n        \"materialId\": materialId,\r\n        \"materialName\": materialName,\r\n        \"category\": category,\r\n        \"quantity\": {\r\n          'unit': unit,\r\n          'value': Number(quantity) \r\n        },\r\n        \"expDate\": selectedDate,  \r\n        \"reorderPoint\": Number(reorderPoint),\r\n      };\r\n  \r\n      try {\r\n        await MaterialService.createNewRawMaterial(materialId,newMaterial);\r\n        setSuccess('Saved to the Database');\r\n        history.goBack();\r\n      } catch (e) {\r\n        setError(e);\r\n      }\r\n      \r\n    }\r\n    \r\n    const handleCancel = (e) => {\r\n      e.preventDefault();\r\n      history.goBack();\r\n      return ;\r\n    }\r\n  \r\n    return (\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <Paper  elevation={3} style={{padding: 25 }}>\r\n          <h2\r\n            style={{\r\n              alignItems: \"center\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            Add Production Schedule\r\n          </h2>\r\n          \r\n          <form onSubmit={handleSubmit} className={classes.paper}>\r\n            <Grid\r\n              container\r\n              spacing={2}\r\n              direction=\"column\"\r\n              justify=\"center\"\r\n              alignContent=\"center\"\r\n            >\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  className={classes.formControl}\r\n                >         \r\n                  <InputLabel id=\"category-label\">Item</InputLabel>\r\n                  <Select\r\n                    variant=\"filled\"\r\n                    labelId=\"category-label\"\r\n                    value={category}\r\n                    onChange={handleCategoryChange}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"chemical\">Chemical</MenuItem>\r\n                    <MenuItem value=\"dye\">Dye</MenuItem>\r\n                    <MenuItem value=\"fragnance\">Fragnance</MenuItem>\r\n                    <MenuItem value=\"localRawMaterial\">Local raw material</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <FormControl\r\n                  variant=\"filled\"\r\n                  fullWidth\r\n                  className={classes.formControl}\r\n                >\r\n                  <InputLabel id=\"category-label\">variant</InputLabel>\r\n                  <Select\r\n                    variant=\"filled\"\r\n                    labelId=\"category-label\"\r\n                    value={category}\r\n                    onChange={handleCategoryChange}\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"chemical\">Chemical</MenuItem>\r\n                    <MenuItem value=\"dye\">Dye</MenuItem>\r\n                    <MenuItem value=\"fragnance\">Fragnance</MenuItem>\r\n                    <MenuItem value=\"localRawMaterial\">Local raw material</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid\r\n              container\r\n              spacing={5}\r\n              direction = \"row\"\r\n              justify = \"center\"\r\n              alignContent = \"center\"\r\n              >\r\n                  <Grid item xs={8}  sm={5}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    fullWidth\r\n                    required\r\n                    variant=\"inline\"\r\n                    style={{ margin: 8 }}\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    label=\"Production Date\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item xs={8}  sm={6}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    disableToolbar\r\n                    fullWidth\r\n                    required\r\n                    variant=\"inline\"\r\n                    style={{ margin: 8 }}\r\n                    format=\"MM/dd/yyyy\"\r\n                    margin=\"normal\"\r\n                    label=\"Starting Time\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                      \"aria-label\": \"change date\",\r\n                    }}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              </Grid>\r\n              \r\n              <Grid item xs={8}  sm={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  value={reorderPoint}\r\n                  onChange={handleReorderPointChange}\r\n                  style={{ margin: 8 }}\r\n                  label=\"Quantity\"\r\n                  margin=\"normal\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid\r\n              container\r\n              spacing={5}\r\n              direction = \"row\"\r\n              justify = \"center\"\r\n              alignContent = \"center\"\r\n              >\r\n              <Grid item xs={8}  sm={4}>\r\n                <Button onClick={handleCancel} variant=\"contained\"  color=\"secondary\">\r\n                   Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={8}  sm={4}>\r\n                <Button type='submit' startIcon={<SaveOutlined/>} variant=\"contained\"  color=\"primary\">\r\n                  Save \r\n                </Button>\r\n              </Grid>  \r\n              </Grid>\r\n              \r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n  ","C:\\terkon\\tekron\\src\\pages\\details\\DetailsPage.js",[],"C:\\terkon\\tekron\\src\\pages\\details\\DetailsList.js",[],"C:\\terkon\\tekron\\src\\pages\\details\\ItemDesc.js",[],"C:\\terkon\\tekron\\src\\pages\\details\\RowMaterials.js",[],"C:\\terkon\\tekron\\src\\pages\\details\\Tests.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":9,"column":12,"nodeType":"233","messageId":"234","endLine":9,"endColumn":17},{"ruleId":"231","severity":1,"message":"235","line":1,"column":26,"nodeType":"233","messageId":"234","endLine":1,"endColumn":35},{"ruleId":"231","severity":1,"message":"236","line":34,"column":11,"nodeType":"233","messageId":"234","endLine":34,"endColumn":15},{"ruleId":"231","severity":1,"message":"237","line":9,"column":10,"nodeType":"233","messageId":"234","endLine":9,"endColumn":20},{"ruleId":"231","severity":1,"message":"238","line":1,"column":15,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"239","line":14,"column":18,"nodeType":"233","messageId":"234","endLine":14,"endColumn":25},{"ruleId":"231","severity":1,"message":"240","line":9,"column":19,"nodeType":"233","messageId":"234","endLine":9,"endColumn":29},{"ruleId":"231","severity":1,"message":"238","line":2,"column":45,"nodeType":"233","messageId":"234","endLine":2,"endColumn":55},{"ruleId":"231","severity":1,"message":"241","line":19,"column":11,"nodeType":"233","messageId":"234","endLine":19,"endColumn":18},{"ruleId":"231","severity":1,"message":"240","line":22,"column":21,"nodeType":"233","messageId":"234","endLine":22,"endColumn":31},{"ruleId":"231","severity":1,"message":"242","line":73,"column":9,"nodeType":"233","messageId":"234","endLine":73,"endColumn":25},{"ruleId":"231","severity":1,"message":"243","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":34},{"ruleId":"227","replacedBy":"244"},{"ruleId":"229","replacedBy":"245"},{"ruleId":"231","severity":1,"message":"235","line":1,"column":26,"nodeType":"233","messageId":"234","endLine":1,"endColumn":35},{"ruleId":"231","severity":1,"message":"236","line":34,"column":11,"nodeType":"233","messageId":"234","endLine":34,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":57,"column":12,"nodeType":"233","messageId":"234","endLine":57,"endColumn":17},{"ruleId":"231","severity":1,"message":"246","line":58,"column":12,"nodeType":"233","messageId":"234","endLine":58,"endColumn":19},{"ruleId":"231","severity":1,"message":"247","line":69,"column":11,"nodeType":"233","messageId":"234","endLine":69,"endColumn":33},{"ruleId":"231","severity":1,"message":"248","line":73,"column":11,"nodeType":"233","messageId":"234","endLine":73,"endColumn":35},{"ruleId":"231","severity":1,"message":"249","line":85,"column":11,"nodeType":"233","messageId":"234","endLine":85,"endColumn":27},{"ruleId":"231","severity":1,"message":"250","line":89,"column":11,"nodeType":"233","messageId":"234","endLine":89,"endColumn":31},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'path' is assigned a value but never used.","'useHistory' is defined but never used.","'Typography' is defined but never used.","'setData' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'classes' is assigned a value but never used.","'initialItemsData' is assigned a value but never used.","'AssignmentReturnOutlined' is defined but never used.",["251"],["252"],"'success' is assigned a value but never used.","'handleMaterialIdChange' is assigned a value but never used.","'handleMaterialNameChange' is assigned a value but never used.","'handleUnitChange' is assigned a value but never used.","'handleQuantityChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]