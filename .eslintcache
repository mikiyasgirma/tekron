[{"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\index.js":"1","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\App.js":"2","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignUp.js":"3","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\firebase.js":"4","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\contexts\\AuthContext.js":"5","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\Dashboard.js":"6","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\PrivateRoute.js":"7","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\listItems.js":"8","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\Navigate.js":"9","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignIn.js":"10","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\BodyWrapper.js":"11","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsPage.js":"12","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTab.js":"13","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\TabPanel.js":"14","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsFab.js":"15","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTable.js":"16","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemForm.js":"17","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\PackagingMaterialForm.js":"18","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\RawMaterialForm.js":"19","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\RawMaterialsTable.js":"20","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\services\\MaterialServices.js":"21"},{"size":146,"mtime":1607986207869,"results":"22","hashOfConfig":"23"},{"size":932,"mtime":1607961811109,"results":"24","hashOfConfig":"23"},{"size":4501,"mtime":1608404954006,"results":"25","hashOfConfig":"23"},{"size":595,"mtime":1608415078984,"results":"26","hashOfConfig":"23"},{"size":1337,"mtime":1607317693519,"results":"27","hashOfConfig":"23"},{"size":1106,"mtime":1607966751483,"results":"28","hashOfConfig":"23"},{"size":455,"mtime":1607710078283,"results":"29","hashOfConfig":"23"},{"size":2389,"mtime":1607965790635,"results":"30","hashOfConfig":"23"},{"size":4499,"mtime":1608077262367,"results":"31","hashOfConfig":"23"},{"size":4128,"mtime":1608404940922,"results":"32","hashOfConfig":"23"},{"size":736,"mtime":1607943469872,"results":"33","hashOfConfig":"23"},{"size":1313,"mtime":1608162599167,"results":"34","hashOfConfig":"23"},{"size":2294,"mtime":1608439470415,"results":"35","hashOfConfig":"23"},{"size":766,"mtime":1608070719803,"results":"36","hashOfConfig":"23"},{"size":2974,"mtime":1608501326910,"results":"37","hashOfConfig":"23"},{"size":1199,"mtime":1608441075450,"results":"38","hashOfConfig":"23"},{"size":147,"mtime":1608080823775,"results":"39","hashOfConfig":"23"},{"size":2962,"mtime":1608156516768,"results":"40","hashOfConfig":"23"},{"size":8400,"mtime":1608505540786,"results":"41","hashOfConfig":"23"},{"size":3173,"mtime":1608504370688,"results":"42","hashOfConfig":"23"},{"size":646,"mtime":1608488988511,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"xo8ert",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\index.js",[],["92","93"],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\App.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignUp.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\firebase.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\Dashboard.js",["94"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport BodyWrapper from '../components/Navigator/BodyWrapper';\r\nimport Navigate from '../components/Navigator/Navigate';\r\nimport { useAuth} from '../contexts/AuthContext';\r\n\r\nexport default function Dashboard() {\r\n\r\n    const [error, setError] = useState('');\r\n    const { signout } = useAuth();\r\n    \r\n    const history = useHistory();\r\n\r\n    async function handleLogOut(){\r\n        try {\r\n            setError('');\r\n            await signout(); \r\n            history.push('/');\r\n        } catch (e) {\r\n            setError('Unable to logout!');\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Navigate title = {'Dashbord'} logout = {()=> handleLogOut()} /> \r\n        \r\n            <BodyWrapper>\r\n                <div>\r\n                    {/* { error && <Alert variant = 'danger'> { error } </Alert> } */}\r\n                    {/* <Button onClick = {handleLogOut} >Log Out</Button> */}\r\n                    Dashbord \r\n                </div>\r\n            </BodyWrapper>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\PrivateRoute.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\listItems.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\Navigate.js",["95"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, CssBaseline , Drawer, AppBar,Toolbar, List,Typography,Divider,IconButton,Badge} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport  { mainListItems, secondaryListItems } from './listItems';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Navigate(props) {\r\n\r\n  // const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n  //TODO:handle logout functionality here take it from Dashboard component \r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {props.title}\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\" onClick={props.logout}>\r\n              <ExitToAppIcon />\r\n            Log out\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{mainListItems}</List>\r\n        <Divider />\r\n        <List>{secondaryListItems}</List>\r\n      </Drawer>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\SignIn.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\Navigator\\BodyWrapper.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsPage.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTab.js",["96"],"import React,{ useState, useEffect} from 'react';\r\nimport { Grid, makeStyles} from '@material-ui/core';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabPanel from '../../components/TabPanel';\r\nimport ItemsTable from './ItemsTable';\r\nimport RawMaterialsTable from './RawMaterialsTable';\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `items-tab-${index}`,\r\n    'aria-controls': `items-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ItemsTabs({children}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  // const [itemsData, setItemsData] = useState();\r\n  // const [materialsData, setMaterialsData] = useState();\r\n\r\n  /// TODO: initially fetch all itemsData b/c that's what got rendered first and pass it to Tab 0 as a props \r\n \r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const initialItemsData = [\r\n    {itemId: 'DW-10025', itemName: 'Dish Washer', category: 'Cleaning', variantType:'Color'},\r\n    {itemId: 'SM-10013', itemName: 'Shampoo', category: 'Cosmetics', variantType:'Flavour'},\r\n    {itemId: 'LHW-10025', itemName: 'Liquid Hand Soap', category: 'Cleaning', variantType:'Flavour'},\r\n    {itemId: 'WC-10025', itemName: 'Windo Cleaner', category: 'Cleaning', variantType:'None'},\r\n    {itemId: 'HS-10025', itemName: 'Hand soap', category: 'Cleaning', variantType:'Flavour'},\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Tabs value={value} onChange={handleChange} aria-label=\"items tabs\">\r\n          <Tab label=\"Product Items\" {...a11yProps(0)}  />\r\n          <Tab label=\"Materials\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <Grid \r\n          container\r\n          direction='row'\r\n          justify='center'\r\n          alignContent='center' \r\n        >\r\n          {children}\r\n        </Grid>\r\n        \r\n      <TabPanel value={value} index={0}>\r\n        <ItemsTable initialData= {initialItemsData} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <RawMaterialsTable/>\r\n        {/* TODO: render PackagingMaterialsTable */}\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\components\\TabPanel.js",["97"],"import { Box, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default  function TabPanel(props) {\r\n    const { children, value, index, message, ...other  } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}>\r\n\r\n        {value === index && (\r\n          <Box p={4}>\r\n            <div>{message}</div>\r\n            {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  \r\n  // TabPanel.propTypes = {\r\n  //   children: PropTypes.node,\r\n  //   index: PropTypes.any.isRequired,\r\n  //   value: PropTypes.any.isRequired,\r\n  // };","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsFab.js",["98"],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemsTable.js",["99"],"import React, {useState} from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nexport default function ItemsTable({initialData}) {\r\n    \r\n    // const initialData = [\r\n    //     {itemId: 'DW-10025', itemName: 'Dish Washer', category: 'Cleaning', variantType:'Color'},\r\n    //     {itemId: 'SM-10013', itemName: 'Shampoo', category: 'Cosmetics', variantType:'Flavour'},\r\n    //     {itemId: 'LHW-10025', itemName: 'Liquid Hand Soap', category: 'Cleaning', variantType:'Flavour'},\r\n    //     {itemId: 'WC-10025', itemName: 'Windo Cleaner', category: 'Cleaning', variantType:'None'},\r\n    //     {itemId: 'HS-10025', itemName: 'Hand soap', category: 'Cleaning', variantType:'Flavour'},\r\n    // ];\r\n\r\n    const [data, setData] = useState(initialData);\r\n   \r\n    const columns = [\r\n        {title: 'Item Id', field: 'itemId'},\r\n        {title: 'Item Name', field: 'itemName'},\r\n        {title: 'Category', field: 'category'},\r\n        {title: 'Variant Type', field: 'variantType'}\r\n    ]\r\n\r\n\r\n    return (\r\n      <MaterialTable\r\n        title=\"Items table\"\r\n        columns={columns}\r\n        data={data}        \r\n        options={{\r\n          search: true\r\n        }}\r\n      />\r\n    )\r\n  }\r\n  ","C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\ItemForm.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\PackagingMaterialForm.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\RawMaterialForm.js",[],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\pages\\items\\RawMaterialsTable.js",["100"],"C:\\Users\\Merci_Boss\\Documents\\Dev\\web-apps\\tekron\\src\\services\\MaterialServices.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":9,"column":12,"nodeType":"107","messageId":"108","endLine":9,"endColumn":17},{"ruleId":"105","severity":1,"message":"109","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":20},{"ruleId":"105","severity":1,"message":"110","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"111","line":1,"column":15,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"112","line":34,"column":11,"nodeType":"107","messageId":"108","endLine":34,"endColumn":15},{"ruleId":"105","severity":1,"message":"113","line":14,"column":18,"nodeType":"107","messageId":"108","endLine":14,"endColumn":25},{"ruleId":"105","severity":1,"message":"114","line":8,"column":19,"nodeType":"107","messageId":"108","endLine":8,"endColumn":29},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'Typography' is defined but never used.","'path' is assigned a value but never used.","'setData' is assigned a value but never used.","'setColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]